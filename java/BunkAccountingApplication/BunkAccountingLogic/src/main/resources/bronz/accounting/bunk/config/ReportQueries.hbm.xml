<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <sql-query name="fuelsSalesSummary">
		<![CDATA[
SELECT
    DATE_FORMAT(FROM_DAYS(DATES.DATE), '%d %b') AS DATE_TEXT,
    IFNULL(SALES_P.SALE1,0) AS P_SALE,
    IFNULL(SALES_D.SALE,0) AS D_SALE,
    IFNULL(TESTS_P.TEST,0) AS P_TEST,
    IFNULL(TESTS_D.TEST,0) AS D_TEST,
    CLOSING_P.CL_STOCK AS P_CL_STOCK,
    CLOSING_D.CL_STOCK AS D_CL_STOCK
FROM
    (SELECT
        DATES.DATE
    FROM
        PBMS_SETTLEMENTS DATES
    WHERE
        DATES.DATE >= :START
            AND DATES.DATE <= :END) AS DATES
        RIGHT JOIN
    (SELECT
        PX_S.DATE AS S_DATE, SUM(PX_S.QUANTITY) AS SALE1
    FROM
        PBMS_PRODUCT_TRANSACTIONS PX_S
    WHERE
        PX_S.SELL_RECIEVE = 'SALE'
            AND PX_S.PRODUCT_ID = 1
            AND PX_S.DATE >= :START
            AND PX_S.DATE <= :END
    GROUP BY PX_S.DATE) AS SALES_P ON DATES.DATE = SALES_P.S_DATE
        RIGHT JOIN
    (SELECT
        PX_S.DATE AS S_DATE, SUM(PX_S.QUANTITY) AS SALE
    FROM
        PBMS_PRODUCT_TRANSACTIONS PX_S
    WHERE
        PX_S.SELL_RECIEVE = 'SALE'
            AND PX_S.PRODUCT_ID = 2
            AND PX_S.DATE >= :START
            AND PX_S.DATE <= :END
    GROUP BY PX_S.DATE) AS SALES_D ON DATES.DATE = SALES_D.S_DATE
        LEFT OUTER JOIN
    (SELECT
        TX_T.DATE AS T_DATE, SUM(TX_T.QUANTITY) AS TEST
    FROM
        PBMS_TANK_TRANSACTIONS TX_T
    LEFT JOIN PBMS_TANK_TABLE TA ON TA.PK_TANK_ID = TX_T.TANK_ID
    WHERE
        TX_T.TRANS_TYPE = 'TEST'
            AND TA.PRODUCT_ID = 1
            AND TX_T.DATE >= :START
            AND TX_T.DATE <= :END
    GROUP BY TX_T.DATE) AS TESTS_P ON TESTS_P.T_DATE = DATES.DATE
        LEFT OUTER JOIN
    (SELECT
        TX_T.DATE AS T_DATE, SUM(TX_T.QUANTITY) AS TEST
    FROM
        PBMS_TANK_TRANSACTIONS TX_T
    LEFT JOIN PBMS_TANK_TABLE TA ON TA.PK_TANK_ID = TX_T.TANK_ID
    WHERE
        TX_T.TRANS_TYPE = 'TEST'
            AND TA.PRODUCT_ID = 2
            AND TX_T.DATE >= :START
            AND TX_T.DATE <= :END
    GROUP BY TX_T.DATE) AS TESTS_D ON TESTS_D.T_DATE = DATES.DATE
        LEFT OUTER JOIN
    (SELECT
        TA_CL.CL_DATE AS CL_DATE, SUM(TA_TX.BALANCE) AS CL_STOCK
    FROM
        (SELECT
        MAX(TX_CL.PK_SLNO) AS SLNO, TX_CL.DATE AS CL_DATE
    FROM
        PBMS_TANK_TRANSACTIONS TX_CL
    LEFT JOIN PBMS_TANK_TABLE TA ON TA.PK_TANK_ID = TX_CL.TANK_ID
    WHERE
        TA.PRODUCT_ID = 1
            AND TX_CL.DATE >= :START
            AND TX_CL.DATE <= :END
    GROUP BY TX_CL.TANK_ID , TX_CL.DATE) TA_CL
    LEFT JOIN PBMS_TANK_TRANSACTIONS TA_TX ON TA_TX.PK_SLNO = TA_CL.SLNO
    GROUP BY TA_CL.CL_DATE) AS CLOSING_P ON CLOSING_P.CL_DATE = DATES.DATE
		LEFT OUTER JOIN
    (SELECT
        TA_CL.CL_DATE AS CL_DATE, SUM(TA_TX.BALANCE) AS CL_STOCK
    FROM
        (SELECT
        MAX(TX_CL.PK_SLNO) AS SLNO, TX_CL.DATE AS CL_DATE
    FROM
        PBMS_TANK_TRANSACTIONS TX_CL
    LEFT JOIN PBMS_TANK_TABLE TA ON TA.PK_TANK_ID = TX_CL.TANK_ID
    WHERE
        TA.PRODUCT_ID = 2
            AND TX_CL.DATE >= :START
            AND TX_CL.DATE <= :END
    GROUP BY TX_CL.TANK_ID , TX_CL.DATE) TA_CL
    LEFT JOIN PBMS_TANK_TRANSACTIONS TA_TX ON TA_TX.PK_SLNO = TA_CL.SLNO
    GROUP BY TA_CL.CL_DATE) AS CLOSING_D ON CLOSING_D.CL_DATE = DATES.DATE
ORDER BY DATES.DATE
		]]>
    </sql-query>
</hibernate-mapping>
