<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="bronz.accounting.bunk.products.model.StockVariation">
        <id name="productId" type="java.lang.Integer">
            <column name="PROD_ID" />
        </id>
        <property name="prodName" type="java.lang.String">
            <column name="NAME" />
        </property>
        <property name="thisMonthSale" type="java.math.BigDecimal">
            <column name="SALES" />
        </property>
        <property name="thisMonthVariation" type="java.math.BigDecimal">
            <column name="VARIATION" />
        </property>
        <property name="prevMonthVariation" type="java.math.BigDecimal">
            <column name="VARIATION_PREV_MONTH" />
        </property>
        <property name="thisMonthVarAmt" type="java.math.BigDecimal">
            <column name="VARIATION_AMT" />
        </property>
        <property name="prevMonthVarPercetage" type="java.math.BigDecimal">
            <column name="VARIATION_PERCENTAGE_PREV_MONTH" />
        </property>
    </class>
    <sql-query name="findStockVariation">
		<![CDATA[
			SELECT PA.PRODUCT_NAME AS NAME,
				PA.PK_PRODUCT_ID AS PROD_ID,
			  	SALES.TOTAL_SALES AS SALES,
			  	(ACTUAL_CL_STOCK.TANK_CL - STOCK.BAL) AS VARIATION,
			  	(ACTUAL_CL_STOCK_PREV.TANK_CL - STOCK_PREV.BAL) AS VARIATION_PREV_MONTH,
			  	((ACTUAL_CL_STOCK.TANK_CL - STOCK.BAL) * STOCK.PRICE) AS VARIATION_AMT,
			  	(((ACTUAL_CL_STOCK_PREV.TANK_CL - STOCK_PREV.BAL)/SALES_PREV_MONTH.TOTAL_SALES) * 100) AS VARIATION_PERCENTAGE_PREV_MONTH
			FROM PBMS_PRODUCT_TABLE PA
			LEFT OUTER JOIN (
			  SELECT PRODUCT_ID,
			    SUM(QUANTITY) AS TOTAL_SALES,
			    SUM(QUANTITY*MARGIN) AS TOTAL_SALES_MARGIN
			  FROM pbms_product_transactions
			  where SELL_RECIEVE = 'SALE'
			    AND DATE >= :monthStart
			    AND DATE <= :monthLast
			  group by PRODUCT_ID) AS SALES
			ON PA.PK_PRODUCT_ID = SALES.PRODUCT_ID
			LEFT OUTER JOIN (
			  SELECT PRODUCT_ID,
			    SUM(QUANTITY) AS TOTAL_SALES,
			    SUM(QUANTITY*MARGIN) AS TOTAL_SALES_MARGIN
			  FROM pbms_product_transactions
			  where SELL_RECIEVE = 'SALE'
			    AND DATE >= :prevMonthStart
			    AND DATE < :monthStart 
			  group by PRODUCT_ID) AS SALES_PREV_MONTH
			ON PA.PK_PRODUCT_ID = SALES_PREV_MONTH.PRODUCT_ID
			LEFT OUTER JOIN (
			  SELECT TA.PRODUCT_ID AS PRODUCT_ID,
			    SUM(TANK_TX.BALANCE) AS TANK_CL
			  FROM (SELECT MAX(PK_SLNO) AS SLNO
			    FROM PBMS_TANK_TRANSACTIONS
			    WHERE DATE <= :monthLast
			    GROUP BY TANK_ID) AS CL_SLNO
			  LEFT JOIN PBMS_TANK_TRANSACTIONS TANK_TX
			    ON TANK_TX.PK_SLNO = CL_SLNO.SLNO
			  LEFT JOIN PBMS_TANK_TABLE TA
			    ON TANK_TX.TANK_ID = TA.PK_TANK_ID
			  GROUP BY TA.PRODUCT_ID) AS ACTUAL_CL_STOCK
			ON ACTUAL_CL_STOCK.PRODUCT_ID = PA.PK_PRODUCT_ID
			LEFT OUTER JOIN (
			  SELECT TA.PRODUCT_ID AS PRODUCT_ID,
			    SUM(TANK_TX.BALANCE) AS TANK_CL
			  FROM (SELECT MAX(PK_SLNO) AS SLNO
			    FROM PBMS_TANK_TRANSACTIONS
			    WHERE DATE < :monthStart
			    GROUP BY TANK_ID) AS CL_SLNO
			  LEFT JOIN PBMS_TANK_TRANSACTIONS TANK_TX
			    ON TANK_TX.PK_SLNO = CL_SLNO.SLNO
			  LEFT JOIN PBMS_TANK_TABLE TA
			    ON TANK_TX.TANK_ID = TA.PK_TANK_ID
			  GROUP BY TA.PRODUCT_ID) AS ACTUAL_CL_STOCK_PREV
			ON ACTUAL_CL_STOCK_PREV.PRODUCT_ID = PA.PK_PRODUCT_ID
			LEFT OUTER JOIN (
			  SELECT TX.PRODUCT_ID AS PROD_ID,
			  TX.BALANCE AS BAL,
			  TX.TOTAL_PRICE AS PRICE
			FROM (SELECT MAX(PK_SLNO) AS SLNO
			  FROM PBMS_PRODUCT_TRANSACTIONS
			  WHERE DATE <= :monthLast
			    AND SELL_RECIEVE <> 'DIFF'
			    AND PRODUCT_ID < 5
			  GROUP BY PRODUCT_ID ) AS MAX_SLNO
			LEFT JOIN PBMS_PRODUCT_TRANSACTIONS TX
			 ON TX.PK_SLNO = MAX_SLNO.SLNO) AS STOCK
			ON STOCK.PROD_ID = PA.PK_PRODUCT_ID
			LEFT OUTER JOIN (
			  SELECT TX.PRODUCT_ID AS PROD_ID,
			  TX.BALANCE AS BAL
			FROM (SELECT MAX(PK_SLNO) AS SLNO
			  FROM PBMS_PRODUCT_TRANSACTIONS
			  WHERE DATE < :monthStart
			    AND SELL_RECIEVE <> 'DIFF'
			    AND PRODUCT_ID < 5
			  GROUP BY PRODUCT_ID ) AS MAX_SLNO
			LEFT JOIN PBMS_PRODUCT_TRANSACTIONS TX
			 ON TX.PK_SLNO = MAX_SLNO.SLNO) AS STOCK_PREV
			ON STOCK_PREV.PROD_ID = PA.PK_PRODUCT_ID
			WHERE PA.PK_PRODUCT_ID < 5
				AND STOCK.BAL > 0;	
		]]>
    </sql-query>
    
</hibernate-mapping>
